/*阴影*/
.box-shadow(@x: 0; @y: 0; @blur: 1px; @color: #ddd; @inset: default){
    .color ( @a ) when( isnumber(@a) ){
        @color:rgba(0, 0, 0, @a);
    }
    .inset (@a) when (@a = default) {
        @inset:; //清空
    }
    .color(@color);
    .inset(@inset);
    -webkit-box-shadow:@inset @x @y @blur @color;
           -moz-box-shadow:@inset @x @y @blur @color;
                box-shadow:@inset @x @y @blur @color;
}

/*圆角*/
.border-radius(@size: 5px, @radius: default){
    .radius (@radius) when (@radius = default) {
        -webkit-border-radius: @size;
                border-radius: @size;
    }
    .radius (@radius) when (@radius = top) {
        -webkit-border-top-right-radius: @size;
                border-top-right-radius: @size;
        -webkit-border-top-left-radius: @size;
                border-top-left-radius: @size;
    }
    .radius (@radius) when (@radius = right) {
        -webkit-border-top-right-radius: @size;
                border-top-right-radius: @size;
        -webkit-border-bottom-right-radius: @size;
                border-bottom-right-radius: @size;
    }
    .radius (@radius) when (@radius = bottom) {
        -webkit-border-bottom-right-radius: @size;
                border-bottom-right-radius: @size;
        -webkit-border-bottom-left-radius: @size;
                border-bottom-left-radius: @size;       
    }
    .radius (@radius) when (@radius = left) {
        -webkit-border-top-left-radius: @size;
                border-top-left-radius: @size;
        -webkit-border-bottom-left-radius: @size;
                border-bottom-left-radius: @size;
    }
    .radius(@radius);
}

/*三角*/
.arrow(@color: #ddd; @pointer:up; @size: 20px){
    width:0;
    height:0;
    border-width:@size;

    .pointer(@pointer) when (@pointer = up){
        border-style:dashed dashed solid dashed;
        border-color:transparent transparent @color transparent;
    }
    .pointer(@pointer) when (@pointer = down){
        border-style:solid dashed dashed dashed;
        border-color: @color transparent transparent transparent;
    }
    .pointer(@pointer) when (@pointer = left){
        border-style:dashed solid dashed dashed;
        border-color:transparent @color transparent transparent;
    }
    .pointer(@pointer) when (@pointer = right){
        border-style:dashed dashed dashed solid;
        border-color:transparent transparent transparent @color;
    }
    .pointer(@pointer);
}

/*盒子*/
.box-sizing(@boxmodel: border-box){
  -webkit-box-sizing: @boxmodel;
     -moz-box-sizing: @boxmodel;
          box-sizing: @boxmodel;
}

/*透明度*/
.opacity(@opacity){
  filter: ~"alpha(opacity=@{opacity-ie})";
  @opacity-ie: (@opacity * 100);
  opacity: @opacity;
}